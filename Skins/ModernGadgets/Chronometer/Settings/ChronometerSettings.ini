[Rainmeter]
Group=ModernGadgets | MgImportRefresh
MiddleMouseDownAction=[!Refresh]
AccurateText=1

[Metadata]
Name=Chronometer Config
Author=raiguard
Information=Configuration for the Chronometer.
License=Creative Commons BY-NC-SA 3.0
Version=1.5.0-rc.2

; ========= Variables and Styles =========

[Variables]
@includeStyleSheet=#@#StyleSheet.inc
@includeGlobalSettings=#@#Settings\GlobalSettings.inc
@includeClockSettings=#@#Settings\ChronometerSettings.inc

scale=1
bgWidth=240
contentMarginAbs=4

[StylePlayButton]
FontFace=Material Icons
FontSize=13
FontColor=70,240,70
Text=[\xe037]
Antialias=1
X=5R
Y=r
ToolTipText=Test sound

[MeasureSettingsScript]
Measure=Script
ScriptFile=#scriptPath#Settings.lua
SettingsPath=#chronometerSettingsPath#
ConfigPath=#chronometerConfig#
ToggleOn=#toggleOn#
ToggleOff=#toggleOff#
RadioOn=#radioOn#
RadioOff=#radioOff#
DefaultAction=[!Refresh "#chronometerConfig#"]

[MeasureInputText]
Measure=Plugin
Plugin=InputText
SolidColor=#colorInputBg#
FontColor=#colorInputText#
FontSize=10
FontFace=Roboto
UpdateDivider=-1
FocusDismiss=1
InputLimit=30
Antialias=1
DynamicVariables=1
Command1=[!CommandMeasure MeasureSettingsScript "Set('customTimeFormat', '$UserInput$')"] DefaultValue="#customTimeFormat#" X=[MeterTimeFormatCustomInputBox:X] Y=[MeterTimeFormatCustomInputBox:Y] W=[MeterTimeFormatCustomInputBox:W] H=[MeterTimeFormatCustomInputBox:H]
Command2=[!CommandMeasure MeasureSettingsScript "Set('customDateFormat', '$UserInput$')"] DefaultValue="#customDateFormat#" X=[MeterDateFormatCustomInputBox:X] Y=[MeterDateFormatCustomInputBox:Y] W=[MeterDateFormatCustomInputBox:W] H=[MeterDateFormatCustomInputBox:H]
Command3=[!CommandMeasure MeasureSettingsScript "Set('eventName', '$UserInput$')"] DefaultValue="#eventName#" X=[MeterEventCountdownNameInputBox:X] Y=[MeterEventCountdownNameInputBox:Y] W=[MeterEventCountdownNameInputBox:W] H=[MeterEventCountdownNameInputBox:H]
Command4=[!CommandMeasure MeasureSettingsScript "Set('eventTimestamp', '$UserInput$')"] DefaultValue="#eventTimestamp#" X=[MeterEventCountdownTimeInputBox:X] Y=[MeterEventCountdownTimeInputBox:Y] W=[MeterEventCountdownTimeInputBox:W] H=[MeterEventCountdownTimeInputBox:H]
Command5=[!CommandMeasure MeasureSettingsScript "Set('locale', '$UserInput$')"] DefaultValue="#locale#" X=[MeterFormatLocaleInputBox:X] Y=[MeterFormatLocaleInputBox:Y] W=[MeterFormatLocaleInputBox:W] H=[MeterFormatLocaleInputBox:H]
Command6=[!CommandMeasure MeasureSettingsScript "Set('alarm1Time', '$UserInput$')"] DefaultValue="#alarm1Time#" X=[MeterAlarm1TimeInputBox:X] Y=[MeterAlarm1TimeInputBox:Y] W=[MeterAlarm1TimeInputBox:W] H=[MeterAlarm1TimeInputBox:H]
Command7=[!CommandMeasure MeasureSettingsScript "Set('alarm1Duration', '$UserInput$')"] DefaultValue="#alarm1Duration#" X=[MeterAlarm1DurationInputBox:X] Y=[MeterAlarm1DurationInputBox:Y] W=[MeterAlarm1DurationInputBox:W] H=[MeterAlarm1DurationInputBox:H]
Command8=[!CommandMeasure MeasureSettingsScript "Set('alarm1Sound', '$UserInput$')"] DefaultValue="#alarm1Sound#" X=[MeterAlarm1SoundInputBox:X] Y=[MeterAlarm1SoundInputBox:Y] W=[MeterAlarm1SoundInputBox:W] H=[MeterAlarm1SoundInputBox:H]
Command9=[!CommandMeasure MeasureSettingsScript "Set('alarm2Time', '$UserInput$')"] DefaultValue="#alarm2Time#" X=[MeterAlarm2TimeInputBox:X] Y=[MeterAlarm2TimeInputBox:Y] W=[MeterAlarm2TimeInputBox:W] H=[MeterAlarm2TimeInputBox:H]
Command10=[!CommandMeasure MeasureSettingsScript "Set('alarm2Duration', '$UserInput$')"] DefaultValue="#alarm2Duration#" X=[MeterAlarm2DurationInputBox:X] Y=[MeterAlarm2DurationInputBox:Y] W=[MeterAlarm2DurationInputBox:W] H=[MeterAlarm2DurationInputBox:H]
Command11=[!CommandMeasure MeasureSettingsScript "Set('alarm2Sound', '$UserInput$')"] DefaultValue="#alarm2Sound#" X=[MeterAlarm2SoundInputBox:X] Y=[MeterAlarm2SoundInputBox:Y] W=[MeterAlarm2SoundInputBox:W] H=[MeterAlarm2SoundInputBox:H]

; ==================================================
;  METERS
; ==================================================

[MeterBackground]
Meter=Shape
MeterStyle=StyleBackground

[MeterOpenConfigFileButton]
Meter=String
MeterStyle=StyleOpenConfigFileButton | StyleStringButtonHover
LeftMouseUpAction=["#@#Settings\ChronometerSettings.inc"]

[MeterCloseButton]
Meter=Image
MeterStyle=StyleCloseButton

[MeterTitle]
Meter=String
MeterStyle=StyleString | StyleStringConfigTitle
Text=Chronometer Settings

; ----- Toggles -----

[MeterSmallAmPmButton]
Meter=String
MeterStyle=StyleToggleButton | StyleStringButtonHover
Text=[&MeasureSettingsScript:GetIcon([#timeAmPmSize], 12, 15)]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Toggle('timeAmPmSize', '12', '15')"]

[MeterSmallAmPmLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Small AM/PM

[MeterUptimeButton]
Meter=String
MeterStyle=StyleToggleButton | StyleStringButtonHover
Text=[&MeasureSettingsScript:GetIcon([#showSystemUptime])]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Toggle('showSystemUptime', '1', '0')"]

[MeterUptimeLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=System Uptime

[MeterEventCountdownToggle]
Meter=String
MeterStyle=StyleToggleButton | StyleStringButtonHover
Text=[&MeasureSettingsScript:GetIcon([#showEventCountdown])]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Toggle('showEventCountdown', '1', '0')"]

[MeterEventCountdownToggleLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Event Countdown

; ----- Format Customization -----

[MeterFormatCustomizationLabel]
Meter=String
MeterStyle=StyleString | StyleStringConfigSectionHeader
Text=FORMAT CUSTOMIZATION

[MeterFormatCustomizationHelp]
Meter=Image
MeterStyle=StyleHelpButton
ToolTipTitle=Format Customization
ToolTipText=These settings let you control how the date and time are displayed in the Chronometer. The two default settings use the local Windows time and date settings. If you wish, you can also customize the display using the Rainmeter time codes. Click the book icon to view the Time Format Reference.

[MeterFormatCustomizationTutorialButton]
Meter=Image
MeterStyle=StyleTutorialButton | StyleImgButtonHover
X=-20r
ToolTipText=View Time Format Reference
LeftMouseUpAction=["https://docs.rainmeter.net/manual-beta/measures/time/#FormatCodes"]

[MeterFormatLocaleInputBoxLabel]
Meter=String
MeterStyle=StyleString | StyleStringInputBoxLabel
Text=Locale: 

[MeterFormatLocaleInputBoxBackground]
Meter=Shape
MeterStyle=StyleInputBoxBackground | StyleInputBoxBackgroundAdjacentRightAlign | StyleInputBoxBackgroundAdjacentRightAlignHelpButton
W=60

[MeterFormatLocaleInputBox]
Meter=String
MeterStyle=StyleString | StyleStringInputBox
Text=#locale#
LeftMouseUpAction=[!CommandMeasure MeasureInputText "Executebatch 5"]

[MeterFormatLocaleHelpButton]
Meter=Image
MeterStyle=StyleHelpButton
Y=r
ToolTipTitle=Format Locale
ToolTipText=This specifies which language that the date will be shown in. It uses the NLS Language / Locale Identifiers. If you do not know the identifier for your specific language, click this icon to view the identifiers table (look at the "language tag" column for the value you need to use).
LeftMouseUpAction=["https://msdn.microsoft.com/en-us/library/cc233982.aspx"]

; Time Format
[MeterTimeFormatLabel]
Meter=String
MeterStyle=StyleString | StyleStringInputBoxLabel
Text=Time Format

[MeterTimeFormatWinShortButton]
Meter=String
MeterStyle=StyleToggleButton | StyleStringButtonHover
Text=[&MeasureSettingsScript:GetIcon('[#timeFormat]', 'WinShort')]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Set('timeFormat', 'WinShort')"]

[MeterTimeFormatWinShortLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Default (Short)

[MeterTimeFormatWinLongButton]
Meter=String
MeterStyle=StyleToggleButton | StyleRadioButton | StyleStringButtonHover
Text=[&MeasureSettingsScript:GetIcon('[#timeFormat]', 'WinLong')]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Set('timeFormat', 'WinLong')"]

[MeterTimeFormatWinLongLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Default (Long)

[MeterTimeFormatCustomButton]
Meter=String
MeterStyle=StyleToggleButton | StyleStringButtonHover
Text=[&MeasureSettingsScript:GetIcon('[#timeFormat]', 'Custom')]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Set('timeFormat', 'Custom')"]

[MeterTimeFormatCustomLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Custom:

[MeterTimeFormatCustomInputBoxBackground]
Meter=Shape
MeterStyle=StyleInputBoxBackground
X=5R
Y=r
W=(#contentWidth# - [MeterTimeFormatCustomInputBoxBackground:X] + #contentMargin#)
DynamicVariables=1

[MeterTimeFormatCustomInputBox]
Meter=String
MeterStyle=StyleString | StyleStringInputBox
Text=#customTimeFormat#
LeftMouseUpAction=[!CommandMeasure MeasureInputText "Executebatch 1"]
Group=ToggleButtons

; Date Format
[MeterDateFormatLabel]
Meter=String
MeterStyle=StyleString | StyleStringInputBoxLabel
Text=Date Format

[MeterDateFormatWinShortButton]
Meter=String
MeterStyle=StyleToggleButton | StyleStringButtonHover
Text=[&MeasureSettingsScript:GetIcon('[#dateFormat]', 'WinShort')]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Set('dateFormat', 'WinShort')"]

[MeterDateFormatWinShortLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Default (Short)

[MeterDateFormatWinLongButton]
Meter=String
MeterStyle=StyleToggleButton | StyleRadioButton | StyleStringButtonHover
Text=[&MeasureSettingsScript:GetIcon('[#dateFormat]', 'WinLong')]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Set('dateFormat', 'WinLong')"]

[MeterDateFormatWinLongLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Default (Long)

[MeterDateFormatCustomButton]
Meter=String
MeterStyle=StyleToggleButton | StyleStringButtonHover
Text=[&MeasureSettingsScript:GetIcon('[#dateFormat]', 'Custom')]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Set('dateFormat', 'Custom')"]

[MeterDateFormatCustomLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Custom:

[MeterDateFormatCustomInputBoxBackground]
Meter=Shape
MeterStyle=StyleInputBoxBackground
X=5R
Y=r
W=(#contentWidth# - [MeterDateFormatCustomInputBoxBackground:X] + #contentMargin#)
DynamicVariables=1

[MeterDateFormatCustomInputBox]
Meter=String
MeterStyle=StyleString | StyleStringInputBox
Text=#customDateFormat#
LeftMouseUpAction=[!CommandMeasure MeasureInputText "Executebatch 2"]
Group=ToggleButtons

[MeterEventCountdownSectionHeader]
Meter=String
MeterStyle=StyleString | StyleStringConfigSectionHeader
Text=Event Countdown Settings

[MeterEventCountdownNameInputBoxLabel]
Meter=String
MeterStyle=StyleString | StyleStringInputBoxLabel
Text=Event Name: 

[MeterEventCountdownNameInputBoxBackground]
Meter=Shape
MeterStyle=StyleInputBoxBackground | StyleInputBoxBackgroundAdjacent

[MeterEventCountdownNameInputBox]
Meter=String
MeterStyle=StyleString | StyleStringInputBox
Text=#eventName#
LeftMouseUpAction=[!CommandMeasure MeasureInputText "Executebatch 3"]

[MeterEventCountdownTimeInputBoxLabel]
Meter=String
MeterStyle=StyleString | StyleStringInputBoxLabel
Y=6R
Text=Event Time: 

[MeterEventCountdownTimeInputBoxBackground]
Meter=Shape
MeterStyle=StyleInputBoxBackground | StyleInputBoxBackgroundAdjacent

[MeterEventCountdownTimeInputBox]
Meter=String
MeterStyle=StyleString | StyleStringInputBox
Text=#eventTimestamp#
LeftMouseUpAction=[!CommandMeasure MeasureInputText "Executebatch 4"]

; ----- Alarm Settings -----

[MeterAlarmSettingsSectionLabel]
Meter=String
MeterStyle=StyleString | StyleStringConfigSectionHeader
Text=Alarm Settings

; - Alarm 1 -

[MeterAlarm1EnableButton]
Meter=String
MeterStyle=StyleToggleButton | StyleStringButtonHover
Text=[&MeasureSettingsScript:GetIcon([#enableAlarm1])]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Toggle('enableAlarm1', '1', '0')"]

[MeterAlarm1EnableButtonLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Enable Alarm 1

[MeterAlarm1TimeInputBoxLabel]
Meter=String
MeterStyle=StyleString | StyleStringInputBoxLabel
Text=Time:

[MeterAlarm1TimeInputBoxBackground]
Meter=Shape
MeterStyle=StyleInputBoxBackground | StyleInputBoxBackgroundAdjacent
W=50

[MeterAlarm1TimeInputBox]
Meter=String
MeterStyle=StyleString | StyleStringInputBox
Text=#alarm1Time#
LeftMouseUpAction=[!CommandMeasure MeasureInputText "Executebatch 6"]

[MeterAlarm1DurationInputBoxLabel]
Meter=String
MeterStyle=StyleString | StyleStringInputBoxLabel
X=(#contentMarginRight# - (([MeterAlarm1DurationInputBoxSuffix:X] + [MeterAlarm1DurationInputBoxSuffix:W]) - [#CURRENTSECTION#:X]))
Y=[MeterAlarm1TimeInputBoxLabel:Y]
Text=Duration:
DynamicVariables=1

[MeterAlarm1DurationInputBoxBackground]
Meter=Shape
MeterStyle=StyleInputBoxBackground | StyleInputBoxBackgroundAdjacent
W=30

[MeterAlarm1DurationInputBox]
Meter=String
MeterStyle=StyleString | StyleStringInputBox
Text=#alarm1Duration#
LeftMouseUpAction=[!CommandMeasure MeasureInputText "Executebatch 7"]

[MeterAlarm1DurationInputBoxSuffix]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
FontColor=#colorDim#
X=6R
Y=-2r
Text=secs
Group=UpdateCheckRate

[MeterAlarm1SoundInputBoxLabel]
Meter=String
MeterStyle=StyleString | StyleStringInputBoxLabel
Text=Sound file (must be .wav):

[MeterAlarm1SoundInputBoxBackground]
Meter=Shape
MeterStyle=StyleInputBoxBackground
W=(#contentWidth# - 20)

[MeterAlarm1SoundInputBox]
Meter=String
MeterStyle=StyleString | StyleStringInputBox
Text=#alarm1Sound#
LeftMouseUpAction=[!CommandMeasure MeasureInputText "Executebatch 8"]]

[MeterAlarm1SoundPlayButton]
Meter=String
MeterStyle=StylePlayButton | StyleStringButtonHover
LeftMouseUpAction=[Play "#alarm1Sound#"]

; - Alarm 2 -

[MeterAlarm2EnableButton]
Meter=String
MeterStyle=StyleToggleButton | StyleStringButtonHover
Text=[&MeasureSettingsScript:GetIcon([#enableAlarm2])]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Toggle('enableAlarm2', '1', '0')"]

[MeterAlarm2EnableButtonLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Enable Alarm 2

[MeterAlarm2TimeInputBoxLabel]
Meter=String
MeterStyle=StyleString | StyleStringInputBoxLabel
Text=Time:

[MeterAlarm2TimeInputBoxBackground]
Meter=Shape
MeterStyle=StyleInputBoxBackground | StyleInputBoxBackgroundAdjacent
W=50

[MeterAlarm2TimeInputBox]
Meter=String
MeterStyle=StyleString | StyleStringInputBox
Text=#alarm2Time#
LeftMouseUpAction=[!CommandMeasure MeasureInputText "Executebatch 9"]

[MeterAlarm2DurationInputBoxLabel]
Meter=String
MeterStyle=StyleString | StyleStringInputBoxLabel
X=(#contentMarginRight# - (([MeterAlarm2DurationInputBoxSuffix:X] + [MeterAlarm2DurationInputBoxSuffix:W]) - [#CURRENTSECTION#:X]))
Y=[MeterAlarm2TimeInputBoxLabel:Y]
Text=Duration:
DynamicVariables=1

[MeterAlarm2DurationInputBoxBackground]
Meter=Shape
MeterStyle=StyleInputBoxBackground | StyleInputBoxBackgroundAdjacent
W=30

[MeterAlarm2DurationInputBox]
Meter=String
MeterStyle=StyleString | StyleStringInputBox
Text=#alarm2Duration#
LeftMouseUpAction=[!CommandMeasure MeasureInputText "Executebatch 10"]

[MeterAlarm2DurationInputBoxSuffix]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
FontColor=#colorDim#
X=6R
Y=-2r
Text=secs
Group=UpdateCheckRate

[MeterAlarm2SoundInputBoxLabel]
Meter=String
MeterStyle=StyleString | StyleStringInputBoxLabel
Text=Sound file (must be .wav):

[MeterAlarm2SoundInputBoxBackground]
Meter=Shape
MeterStyle=StyleInputBoxBackground
W=(#contentWidth# - 20)

[MeterAlarm2SoundInputBox]
Meter=String
MeterStyle=StyleString | StyleStringInputBox
Text=#alarm2Sound#
LeftMouseUpAction=[!CommandMeasure MeasureInputText "Executebatch 11"]]

[MeterAlarm2SoundPlayButton]
Meter=String
MeterStyle=StylePlayButton | StyleStringButtonHover
LeftMouseUpAction=[Play "#alarm2Sound#"]

; ----- Timer Settings -----

[MeterTimerSettingsLabel]
Meter=String
MeterStyle=StyleString | StyleStringConfigSectionHeader
Text=Timer Settings

[MeterTimerFinishedSoundInputBoxLabel]
Meter=String
MeterStyle=StyleString | StyleStringInputBoxLabel
Text=Timer Finished Sound (must be .wav):

[MeterTimerFinishedSoundInputBoxBackground]
Meter=Shape
MeterStyle=StyleInputBoxBackground
W=(#contentWidth# - 20)

[MeterTimerFinishedSoundInputBox]
Meter=String
MeterStyle=StyleString | StyleStringInputBox
Text=#timerFinishedSound#
LeftMouseUpAction=[!CommandMeasure MeasureInputText "Executebatch 12"]

[MeterTimerFinishedSoundPlayButton]
Meter=String
MeterStyle=StylePlayButton | StyleStringButtonHover
LeftMouseUpAction=[Play "#timerFinishedSound#"]

[MeterBackgroundHeight]
Meter=Image
MeterStyle=StyleBackgroundHeight
; Y=(#contentMarginAbs# + #bgOffset# + 2)R